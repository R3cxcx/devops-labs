pipeline {
    agent any

    environment {
        REGISTRY = "your-dockerhub-username"
        IMAGE = "my-flask-app"
        TAG = "latest"
        KUBECONFIG = credentials('kubeconfig') // store kubeconfig as Jenkins credential
    }

    stages {
        stage('Build Docker Image') {
            steps {
                sh "docker build -t $REGISTRY/$IMAGE:$TAG ."
            }
        }

        stage('Push Image to DockerHub') {
            steps {
                withDockerRegistry([ credentialsId: 'dockerhub-creds', url: '' ]) {
                    sh "docker push $REGISTRY/$IMAGE:$TAG"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withEnv(["KUBECONFIG=$KUBECONFIG"]) {
                    sh """
                    kubectl apply -f 04-kubernetes/deployment.yaml
                    kubectl apply -f 04-kubernetes/service.yaml
                    kubectl apply -f 04-kubernetes/ingress.yaml
                    """
                }
            }
        }
    }
}
